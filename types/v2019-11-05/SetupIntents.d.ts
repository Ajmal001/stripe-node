declare namespace Stripe {
  /**
   * The SetupIntent object.
   */
  interface SetupIntent {
    /**
     * ID of the Connect application that created the SetupIntent.
     */
    application?: string | Application | null;

    /**
     * Reason for cancellation of this SetupIntent, one of `abandoned`, `requested_by_customer`, or `duplicate`.
     */
    cancellation_reason?: SetupIntent.CancellationReason | null;

    /**
     * The client secret of this SetupIntent. Used for client-side retrieval using a publishable key.
     *
     * The client secret can be used to complete payment setup from your frontend. It should not be stored, logged, embedded in URLs, or exposed to anyone other than the customer. Make sure that you have TLS enabled on any page that includes the client secret.
     */
    client_secret?: string | null;

    /**
     * Time at which the object was created. Measured in seconds since the Unix epoch.
     */
    created?: number;

    /**
     * ID of the Customer this SetupIntent belongs to, if one exists.
     *
     * If present, payment methods used with this SetupIntent can only be attached to this Customer, and payment methods attached to other Customers cannot be used with this SetupIntent.
     */
    customer?: string | Customer | null;

    /**
     * An arbitrary string attached to the object. Often useful for displaying to users.
     */
    description?: string | null;

    /**
     * Unique identifier for the object.
     */
    id?: string;

    /**
     * The error encountered in the previous SetupIntent confirmation.
     */
    last_setup_error?: StripeError | null;

    /**
     * Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.
     */
    livemode?: boolean;

    /**
     * ID of the multi use Mandate generated by the SetupIntent.
     */
    mandate?: string | Mandate | null;

    /**
     * Set of key-value pairs that you can attach to an object. This can be useful for storing additional information about the object in a structured format.
     */
    metadata?: {
      [key: string]: string;
    };

    /**
     * If present, this property tells you what actions you need to take in order for your customer to continue payment setup.
     */
    next_action?: NextAction | null;

    /**
     * String representing the object's type. Objects of the same type share the same value.
     */
    object?: 'setup_intent';

    /**
     * The account (if any) for which the setup is intended.
     */
    on_behalf_of?: string | Account | null;

    /**
     * ID of the payment method used with this SetupIntent.
     */
    payment_method?: string | PaymentMethod | null;

    /**
     * Payment-method-specific configuration for this SetupIntent.
     */
    payment_method_options?: PaymentMethodOptions | null;

    /**
     * The list of payment method types (e.g. card) that this SetupIntent is allowed to set up.
     */
    payment_method_types?: Array<string>;

    /**
     * ID of the single_use Mandate generated by the SetupIntent.
     */
    single_use_mandate?: string | Mandate | null;

    /**
     * [Status](https://stripe.com/docs/payments/intents#intent-statuses) of this SetupIntent, one of `requires_payment_method`, `requires_confirmation`, `requires_action`, `processing`, `canceled`, or `succeeded`.
     */
    status?: SetupIntent.Status;

    /**
     * Indicates how the payment method is intended to be used in the future.
     *
     * Use `on_session` if you intend to only reuse the payment method when the customer is in your checkout flow. Use `off_session` if your customer may or may not be in your checkout flow. If not provided, this value defaults to `off_session`.
     */
    usage?: string;
  }

  namespace SetupIntent {
    type CancellationReason =
      | 'abandoned'
      | 'duplicate'
      | 'requested_by_customer'

    type Status =
      | 'canceled'
      | 'processing'
      | 'requires_action'
      | 'requires_confirmation'
      | 'requires_payment_method'
      | 'succeeded'
  }

  /**
   * Creates a SetupIntent object.
   *
   * After the SetupIntent is created, attach a payment method and [confirm](https://stripe.com/docs/api/setup_intents/confirm)
   * to collect any required permissions to charge the payment method later.
   */
  interface SetupIntentCreateParams {
    /**
     * Set to `true` to attempt to confirm this SetupIntent immediately. This parameter defaults to `false`. If the payment method attached is a card, a return_url may be provided in case additional authentication is required.
     */
    confirm?: boolean;

    /**
     * ID of the Customer this SetupIntent belongs to, if one exists.
     *
     * If present, payment methods used with this SetupIntent can only be attached to this Customer, and payment methods attached to other Customers cannot be used with this SetupIntent.
     */
    customer?: string;

    /**
     * An arbitrary string attached to the object. Often useful for displaying to users.
     */
    description?: string;

    /**
     * Specifies which fields in the response should be expanded.
     */
    expand?: Array<string>;

    /**
     * This hash contains details about the Mandate to create. This parameter can only be used with [`confirm=true`](https://stripe.com/docs/api/setup_intents/create#create_setup_intent-confirm).
     */
    mandate_data?: secret_key_param;

    /**
     * Set of key-value pairs that you can attach to an object. This can be useful for storing additional information about the object in a structured format.
     */
    metadata?: {
      [key: string]: string;
    };

    /**
     * The Stripe account ID for which this SetupIntent is created.
     */
    on_behalf_of?: string;

    /**
     * ID of the payment method (a PaymentMethod, Card, or saved Source object) to attach to this SetupIntent.
     */
    payment_method?: string;

    /**
     * Payment-method-specific configuration for this SetupIntent.
     */
    payment_method_options?: payment_method_options_param;

    /**
     * The list of payment method types (e.g. card) that this SetupIntent is allowed to use. If this is not provided, defaults to ["card"].
     */
    payment_method_types?: Array<string>;

    /**
     * The URL to redirect your customer back to after they authenticate or cancel their payment on the payment method's app or site. If you'd prefer to redirect to a mobile application, you can alternatively supply an application URI scheme. This parameter can only be used with [`confirm=true`](https://stripe.com/docs/api/setup_intents/create#create_setup_intent-confirm).
     */
    return_url?: string;

    /**
     * If this hash is populated, this SetupIntent will generate a single_use Mandate on success.
     */
    single_use?: setup_intent_single_use_params;

    /**
     * Indicates how the payment method is intended to be used in the future. If not provided, this value defaults to `off_session`.
     */
    usage?: string | SetupIntentCreateParams.Usage;
  }

  namespace SetupIntentCreateParams {
    type Usage = 'off_session' | 'on_session'
  }

  /**
   * Returns a list of SetupIntents.
   */
  interface SetupIntentListParams {
    /**
     * A filter on the list, based on the object `created` field. The value can be a string with an integer Unix timestamp, or it can be a dictionary with a number of different query options.
     */
    created?: range_query_specs | number;

    /**
     * Only return SetupIntents for the customer specified by this customer ID.
     */
    customer?: string;

    /**
     * A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.
     */
    ending_before?: string;

    /**
     * Specifies which fields in the response should be expanded.
     */
    expand?: Array<string>;

    /**
     * A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
     */
    limit?: number;

    /**
     * Only return SetupIntents associated with the specified payment method.
     */
    payment_method?: string;

    /**
     * A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.
     */
    starting_after?: string;
  }

  /**
   * Retrieves the details of a SetupIntent that has previously been created.
   *
   * Client-side retrieval using a publishable key is allowed when the client_secret is provided in the query string.
   *
   * When retrieved with a publishable key, only a subset of properties will be returned. Please refer to the [SetupIntent](https://stripe.com/docs/api#setup_intent_object) object reference for more details.
   */
  interface SetupIntentRetrieveParams {
    /**
     * The client secret of the SetupIntent. Required if a publishable key is used to retrieve the SetupIntent.
     */
    client_secret?: string;

    /**
     * Specifies which fields in the response should be expanded.
     */
    expand?: Array<string>;
  }

  /**
   * Updates a SetupIntent object.
   */
  interface SetupIntentUpdateParams {
    /**
     * ID of the Customer this SetupIntent belongs to, if one exists.
     *
     * If present, payment methods used with this SetupIntent can only be attached to this Customer, and payment methods attached to other Customers cannot be used with this SetupIntent.
     */
    customer?: string;

    /**
     * An arbitrary string attached to the object. Often useful for displaying to users.
     */
    description?: string;

    /**
     * Specifies which fields in the response should be expanded.
     */
    expand?: Array<string>;

    /**
     * Set of key-value pairs that you can attach to an object. This can be useful for storing additional information about the object in a structured format.
     */
    metadata?: {
      [key: string]: string;
    };

    /**
     * ID of the payment method (a PaymentMethod, Card, or saved Source object) to attach to this SetupIntent.
     */
    payment_method?: string;

    /**
     * The list of payment method types (e.g. card) that this SetupIntent is allowed to set up. If this is not provided, defaults to ["card"].
     */
    payment_method_types?: Array<string>;
  }

  /**
   * A SetupIntent object can be canceled when it is in one of these statuses: requires_payment_method, requires_capture, requires_confirmation, requires_action.
   *
   * Once canceled, setup is abandoned and any operations on the SetupIntent will fail with an error.
   */
  interface SetupIntentCancelParams {
    /**
     * Reason for canceling this SetupIntent. Possible values are `abandoned`, `requested_by_customer`, or `duplicate`
     */
    cancellation_reason?: SetupIntentCancelParams.CancellationReason;

    /**
     * Specifies which fields in the response should be expanded.
     */
    expand?: Array<string>;
  }

  namespace SetupIntentCancelParams {
    type CancellationReason =
      | 'abandoned'
      | 'duplicate'
      | 'requested_by_customer'
  }

  /**
   * Confirm that your customer intends to set up the current or
   * provided payment method. For example, you would confirm a SetupIntent
   * when a customer hits the “Save” button on a payment method management
   * page on your website.
   *
   * If the selected payment method does not require any additional
   * steps from the customer, the SetupIntent will transition to the
   * succeeded status.
   *
   * Otherwise, it will transition to the requires_action status and
   * suggest additional actions via next_action. If setup fails,
   * the SetupIntent will transition to the
   * requires_payment_method status.
   */
  interface SetupIntentConfirmParams {
    /**
     * Specifies which fields in the response should be expanded.
     */
    expand?: Array<string>;

    /**
     * This hash contains details about the Mandate to create
     */
    mandate_data?: secret_key_param | client_key_param;

    /**
     * ID of the payment method (a PaymentMethod, Card, or saved Source object) to attach to this SetupIntent.
     */
    payment_method?: string;

    /**
     * Payment-method-specific configuration for this SetupIntent.
     */
    payment_method_options?: payment_method_options_param;

    /**
     * The URL to redirect your customer back to after they authenticate on the payment method's app or site.
     * If you'd prefer to redirect to a mobile application, you can alternatively supply an application URI scheme.
     * This parameter is only used for cards and other redirect-based payment methods.
     */
    return_url?: string;
  }

  class SetupIntentsResource {
    /**
     * Creates a SetupIntent object.
     *
     * After the SetupIntent is created, attach a payment method and [confirm](https://stripe.com/docs/api/setup_intents/confirm)
     * to collect any required permissions to charge the payment method later.
     */
    create(
      params?: SetupIntentCreateParams,
      options?: HeaderOptions
    ): Promise<SetupIntent>;

    /**
     * Returns a list of SetupIntents.
     */
    list(
      params?: SetupIntentListParams,
      options?: HeaderOptions
    ): Promise<PaymentFlowsSetupIntentList>;

    /**
     * Retrieves the details of a SetupIntent that has previously been created.
     *
     * Client-side retrieval using a publishable key is allowed when the client_secret is provided in the query string.
     *
     * When retrieved with a publishable key, only a subset of properties will be returned. Please refer to the [SetupIntent](https://stripe.com/docs/api#setup_intent_object) object reference for more details.
     */
    retrieve(
      id: string,
      params?: SetupIntentRetrieveParams,
      options?: HeaderOptions
    ): Promise<SetupIntent>;

    /**
     * Updates a SetupIntent object.
     */
    update(
      id: string,
      params?: SetupIntentUpdateParams,
      options?: HeaderOptions
    ): Promise<SetupIntent>;

    /**
     * A SetupIntent object can be canceled when it is in one of these statuses: requires_payment_method, requires_capture, requires_confirmation, requires_action.
     *
     * Once canceled, setup is abandoned and any operations on the SetupIntent will fail with an error.
     */
    cancel(
      id: string,
      params?: SetupIntentCancelParams,
      options?: HeaderOptions
    ): Promise<SetupIntent>;

    /**
     * Confirm that your customer intends to set up the current or
     * provided payment method. For example, you would confirm a SetupIntent
     * when a customer hits the “Save” button on a payment method management
     * page on your website.
     *
     * If the selected payment method does not require any additional
     * steps from the customer, the SetupIntent will transition to the
     * succeeded status.
     *
     * Otherwise, it will transition to the requires_action status and
     * suggest additional actions via next_action. If setup fails,
     * the SetupIntent will transition to the
     * requires_payment_method status.
     */
    confirm(
      id: string,
      params?: SetupIntentConfirmParams,
      options?: HeaderOptions
    ): Promise<SetupIntent>;
  }
}