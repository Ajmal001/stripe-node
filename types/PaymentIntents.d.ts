declare namespace Stripe {
  /**
   * The PaymentIntent object.
   */
  export interface PaymentIntent {
    /**
     * Amount intended to be collected by this PaymentIntent. A positive integer representing how much to charge in the [smallest currency unit](https://stripe.com/docs/currencies#zero-decimal) (e.g., 100 cents to charge $1.00 or 100 to charge Â¥100, a zero-decimal currency). The minimum amount is $0.50 US or [equivalent in charge currency](https://stripe.com/docs/currencies#minimum-and-maximum-charge-amounts). The amount value supports up to eight digits (e.g., a value of 99999999 for a USD charge of $999,999.99).
     */
    amount?: number;

    /**
     * Amount that can be captured from this PaymentIntent.
     */
    amount_capturable?: number;

    /**
     * Amount that was collected by this PaymentIntent.
     */
    amount_received?: number;

    /**
     * ID of the Connect application that created the PaymentIntent.
     */
    application?: string | Application | null;

    /**
     * The amount of the application fee (if any) for the resulting payment. See the PaymentIntents [use case for connected accounts](https://stripe.com/docs/payments/connected-accounts) for details.
     */
    application_fee_amount?: number | null;

    /**
     * Populated when `status` is `canceled`, this is the time at which the PaymentIntent was canceled. Measured in seconds since the Unix epoch.
     */
    canceled_at?: number | null;

    /**
     * Reason for cancellation of this PaymentIntent, either user-provided (`duplicate`, `fraudulent`, `requested_by_customer`, or `abandoned`) or generated by Stripe internally (`failed_invoice`, `void_invoice`, or `automatic`).
     */
    cancellation_reason?:
      | 'abandoned'
      | 'automatic'
      | 'duplicate'
      | 'failed_invoice'
      | 'fraudulent'
      | 'requested_by_customer'
      | 'void_invoice'
      | null;

    /**
     * One of `automatic` (default) or `manual`.
     *
     * When the capture method is `automatic`, Stripe automatically captures funds when the customer authorizes the payment.
     *
     * Change `capture_method` to manual if you wish to use [separate authorization and capture](https://stripe.com/docs/payments/capture-later) for payment methods that support this.
     */
    capture_method?: 'automatic' | 'manual';

    /**
     * Charges that were created by this PaymentIntent, if any.
     */
    charges?: ApiList<Charge>;

    /**
     * The client secret of this PaymentIntent. Used for client-side retrieval using a publishable key.
     *
     * The client secret can be used to complete a payment from your frontend. It should not be stored, logged, embedded in URLs, or exposed to anyone other than the customer. Make sure that you have TLS enabled on any page that includes the client secret.
     *
     * Refer to our docs to [accept a payment](https://stripe.com/docs/payments/accept-a-payment) and learn about how `client_secret` should be handled.
     */
    client_secret?: string | null;

    /**
     * One of `automatic` (default) or `manual`.
     *
     * When the confirmation method is `automatic`, a PaymentIntent can be confirmed using a publishable key. After `next_action`s are handled, no additional confirmation is required to complete the payment.
     *
     * When the confirmation method is `manual`, all payment attempts must be made using a secret key. The PaymentIntent returns to the `requires_confirmation` state after handling `next_action`s, and requires your server to initiate each payment attempt with an explicit confirmation.
     */
    confirmation_method?: 'automatic' | 'manual';

    /**
     * Time at which the object was created. Measured in seconds since the Unix epoch.
     */
    created?: number;

    /**
     * Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).
     */
    currency?: string;

    /**
     * ID of the Customer this PaymentIntent belongs to, if one exists.
     *
     * If present, payment methods used with this PaymentIntent can only be attached to this Customer, and payment methods attached to other Customers cannot be used with this PaymentIntent.
     */
    customer?: string | Customer | null;

    /**
     * An arbitrary string attached to the object. Often useful for displaying to users.
     */
    description?: string | null;

    /**
     * Unique identifier for the object.
     */
    id?: string;

    /**
     * ID of the invoice that created this PaymentIntent, if it exists.
     */
    invoice?: string | Invoice | null;

    /**
     * The payment error encountered in the previous PaymentIntent confirmation. It will be cleared if the PaymentIntent is later updated for any reason.
     */
    last_payment_error?:
      | {
        /**
         * For card errors, the ID of the failed charge.
         */
        charge?: string;

        /**
         * For some errors that could be handled programmatically, a short string indicating the [error code](https://stripe.com/docs/error-codes) reported.
         */
        code?: string;

        /**
         * For card errors resulting from a card issuer decline, a short string indicating the [card issuer's reason for the decline](https://stripe.com/docs/declines#issuer-declines) if they provide one.
         */
        decline_code?: string;

        /**
         * A URL to more information about the [error code](https://stripe.com/docs/error-codes) reported.
         */
        doc_url?: string;

        /**
         * A human-readable message providing more details about the error. For card errors, these messages can be shown to your users.
         */
        message?: string;

        /**
         * If the error is parameter-specific, the parameter related to the error. For example, you can use this to display a message near the correct form field.
         */
        param?: string;

        payment_intent?: PaymentIntent;

        payment_method?: PaymentMethod;

        setup_intent?: SetupIntent;

        source?:
          | Account
          | AlipayAccount
          | BankAccount
          | BitcoinReceiver
          | Card
          | Source;

        /**
         * The type of error returned. One of `api_connection_error`, `api_error`, `authentication_error`, `card_error`, `idempotency_error`, `invalid_request_error`, or `rate_limit_error`
         */
        type:
          | 'api_connection_error'
          | 'api_error'
          | 'authentication_error'
          | 'card_error'
          | 'idempotency_error'
          | 'invalid_request_error'
          | 'rate_limit_error';
      }
      | null;

    /**
     * Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.
     */
    livemode?: boolean;

    /**
     * Set of key-value pairs that you can attach to an object. This can be useful for storing additional information about the object in a structured format. For more information, see the [documentation](https://stripe.com/docs/payments/payment-intents/creating-payment-intents#storing-information-in-metadata).
     */
    metadata?: {
      [key: string]: string;
    };

    /**
     * If present, this property tells you what actions you need to take in order for your customer to fulfill a payment using the provided source.
     */
    next_action?:
      | {
        redirect_to_url?: {
          /**
           * If the customer does not exit their browser while authenticating, they will be redirected to this specified URL after completion.
           */
          return_url?: string | null;

          /**
           * The URL you must redirect your customer to in order to authenticate the payment.
           */
          url?: string | null;
        };

        /**
         * Type of the next action to perform, one of `redirect_to_url` or `use_stripe_sdk`.
         */
        type: string;

        /**
         * When confirming a PaymentIntent with Stripe.js, Stripe.js depends on the contents of this dictionary to invoke authentication flows. The shape of the contents is subject to change and is only intended to be used by Stripe.js.
         */
        use_stripe_sdk?: {};
      }
      | null;

    /**
     * String representing the object's type. Objects of the same type share the same value.
     */
    object?: 'payment_intent';

    /**
     * The account (if any) for which the funds of the PaymentIntent are intended. See the PaymentIntents [use case for connected accounts](https://stripe.com/docs/payments/connected-accounts) for details.
     */
    on_behalf_of?: string | Account | null;

    /**
     * ID of the payment method used in this PaymentIntent.
     */
    payment_method?: string | PaymentMethod | null;

    /**
     * Payment-method-specific configuration for this PaymentIntent.
     */
    payment_method_options?:
      | {
        card?: {
          /**
           * Installment details for this payment (Mexico only).
           *
           * For more information, see the [installments integration guide](https://stripe.com/docs/payments/installments).
           */
          installments?:
            | {
              /**
               * Installment plans that may be selected for this PaymentIntent.
               */
              available_plans?:
                | Array<{
                  /**
                   * For `fixed_count` installment plans, this is the number of installment payments your customer will make to their credit card.
                   */
                  count?: number | null;

                  /**
                   * For `fixed_count` installment plans, this is the interval between installment payments your customer will make to their credit card.
                   * One of `month`.
                   */
                  interval?: 'month' | null;

                  /**
                   * Type of installment plan, one of `fixed_count`.
                   */
                  type: 'fixed_count';
                }>
                | null;

              /**
               * Whether Installments are enabled for this PaymentIntent.
               */
              enabled: boolean;

              /**
               * Installment plan selected for this PaymentIntent.
               */
              plan?:
                | {
                  /**
                   * For `fixed_count` installment plans, this is the number of installment payments your customer will make to their credit card.
                   */
                  count?: number | null;

                  /**
                   * For `fixed_count` installment plans, this is the interval between installment payments your customer will make to their credit card.
                   * One of `month`.
                   */
                  interval?: 'month' | null;

                  /**
                   * Type of installment plan, one of `fixed_count`.
                   */
                  type: 'fixed_count';
                }
                | null;
            }
            | null;

          /**
           * We strongly recommend that you rely on our SCA Engine to automatically prompt your customers for authentication based on risk level and [other requirements](https://stripe.com/docs/strong-customer-authentication). However, if you wish to request 3D Secure based on logic from your own fraud engine, provide this option. Permitted values include: `automatic` or `any`. If not provided, defaults to `automatic`. Read our guide on [manually requesting 3D Secure](https://stripe.com/docs/payments/3d-secure#manual-three-ds) for more information on how this configuration interacts with Radar and our SCA Engine.
           */
          request_three_d_secure?:
            | 'any'
            | 'automatic'
            | 'challenge_only'
            | null;
        };
      }
      | null;

    /**
     * The list of payment method types (e.g. card) that this PaymentIntent is allowed to use.
     */
    payment_method_types?: Array<string>;

    /**
     * Email address that the receipt for the resulting payment will be sent to.
     */
    receipt_email?: string | null;

    /**
     * ID of the review associated with this PaymentIntent, if any.
     */
    review?: string | Review | null;

    /**
     * Indicates that you intend to make future payments with this PaymentIntent's payment method.
     *
     * If present, the payment method used with this PaymentIntent can be [attached](https://stripe.com/docs/api/payment_methods/attach) to a Customer, even after the transaction completes.
     *
     * Use `on_session` if you intend to only reuse the payment method when your customer is present in your checkout flow. Use `off_session` if your customer may or may not be in your checkout flow. For more, learn to [save card details after a payment](https://stripe.com/docs/payments/save-after-payment).
     *
     * Stripe uses `setup_future_usage` to dynamically optimize your payment flow and comply with regional legislation and network rules. For example, if your customer is impacted by [SCA](https://stripe.com/docs/strong-customer-authentication), using `off_session` will ensure that they are authenticated while processing this PaymentIntent. You will then be able to collect [off-session payments](https://stripe.com/docs/payments/cards/charging-saved-cards#off-session-payments-with-saved-cards) for this customer.
     */
    setup_future_usage?: string | null;

    /**
     * Shipping information for this PaymentIntent.
     */
    shipping?:
      | {
        address?: {
          /**
           * City/District/Suburb/Town/Village.
           */
          city?: string | null;

          /**
           * 2-letter country code.
           */
          country?: string | null;

          /**
           * Address line 1 (Street address/PO Box/Company name).
           */
          line1?: string | null;

          /**
           * Address line 2 (Apartment/Suite/Unit/Building).
           */
          line2?: string | null;

          /**
           * ZIP or postal code.
           */
          postal_code?: string | null;

          /**
           * State/County/Province/Region.
           */
          state?: string | null;
        };

        /**
         * The delivery service that shipped a physical product, such as Fedex, UPS, USPS, etc.
         */
        carrier?: string | null;

        /**
         * Recipient name.
         */
        name?: string | null;

        /**
         * Recipient phone (including extension).
         */
        phone?: string | null;

        /**
         * The tracking number for a physical product, obtained from the delivery service. If multiple tracking numbers were generated for this purchase, please separate them with commas.
         */
        tracking_number?: string | null;
      }
      | null;

    /**
     * This is a legacy field that will be removed in the future. It is the ID of the Source object that is associated with this PaymentIntent, if one was supplied.
     */
    source?:
      | string
      | Account
      | AlipayAccount
      | BankAccount
      | BitcoinReceiver
      | Card
      | Source
      | null;

    /**
     * For non-card charges, you can use this value as the complete description that appears on your customers' statements. Must contain at least one letter, maximum 22 characters.
     */
    statement_descriptor?: string | null;

    /**
     * Provides information about a card payment that customers see on their statements. Concatenated with the prefix (shortened descriptor) or statement descriptor that's set on the account to form the complete statement descriptor. Maximum 22 characters for the concatenated descriptor.
     */
    statement_descriptor_suffix?: string | null;

    /**
     * Status of this PaymentIntent, one of `requires_payment_method`, `requires_confirmation`, `requires_action`, `processing`, `requires_capture`, `canceled`, or `succeeded`. Read more about each PaymentIntent [status](https://stripe.com/docs/payments/intents#intent-statuses).
     */
    status?:
      | 'canceled'
      | 'processing'
      | 'requires_action'
      | 'requires_capture'
      | 'requires_confirmation'
      | 'requires_payment_method'
      | 'succeeded';

    /**
     * The data with which to automatically create a Transfer when the payment is finalized. See the PaymentIntents [use case for connected accounts](https://stripe.com/docs/payments/connected-accounts) for details.
     */
    transfer_data?:
      | {
        /**
         * Amount intended to be collected by this PaymentIntent. A positive integer representing how much to charge in the [smallest currency unit](https://stripe.com/docs/currencies#zero-decimal) (e.g., 100 cents to charge $1.00 or 100 to charge Â¥100, a zero-decimal currency). The minimum amount is $0.50 US or [equivalent in charge currency](https://stripe.com/docs/currencies#minimum-and-maximum-charge-amounts). The amount value supports up to eight digits (e.g., a value of 99999999 for a USD charge of $999,999.99).
         */
        amount?: number;

        /**
         * The account (if any) the payment will be attributed to for tax
         * reporting, and where funds from the payment will be transferred to upon
         * payment success.
         */
        destination: string | Account;
      }
      | null;

    /**
     * A string that identifies the resulting payment as part of a group. See the PaymentIntents [use case for connected accounts](https://stripe.com/docs/payments/connected-accounts) for details.
     */
    transfer_group?: string | null;
  }

  /**
   * Creates a PaymentIntent object.
   *
   * After the PaymentIntent is created, attach a payment method and [confirm](https://stripe.com/docs/api/payment_intents/confirm)
   * to continue the payment. You can read more about the different payment flows
   * available via the Payment Intents API [here](https://stripe.com/docs/payments/payment-intents).
   *
   * When confirm=true is used during creation, it is equivalent to creating
   * and confirming the PaymentIntent in the same call. You may use any parameters
   * available in the [confirm API](https://stripe.com/docs/api/payment_intents/confirm) when confirm=true
   * is supplied.
   */
  export interface PaymentIntentCreateParams {
    /**
     * Amount intended to be collected by this PaymentIntent. A positive integer representing how much to charge in the [smallest currency unit](https://stripe.com/docs/currencies#zero-decimal) (e.g., 100 cents to charge $1.00 or 100 to charge Â¥100, a zero-decimal currency). The minimum amount is $0.50 US or [equivalent in charge currency](https://stripe.com/docs/currencies#minimum-and-maximum-charge-amounts). The amount value supports up to eight digits (e.g., a value of 99999999 for a USD charge of $999,999.99).
     */
    amount: number;

    /**
     * The amount of the application fee (if any) that will be applied to the
     * payment and transferred to the application owner's Stripe account. For
     * more information, see the PaymentIntents [use case for connected accounts](https://stripe.com/docs/payments/connected-accounts).
     */
    application_fee_amount?: number;

    /**
     * One of `automatic` (default) or `manual`.
     *
     * When the capture method is `automatic`, Stripe automatically captures funds when the customer authorizes the payment.
     *
     * Change `capture_method` to manual if you wish to use [separate authorization and capture](https://stripe.com/docs/payments/capture-later) for payment methods that support this.
     */
    capture_method?: 'automatic' | 'manual';

    /**
     * Set to `true` to attempt to [confirm](https://stripe.com/docs/api/payment_intents/confirm) this PaymentIntent immediately. This parameter defaults to `false`. When creating and confirming a PaymentIntent at the same time, parameters available in the [confirm](https://stripe.com/docs/api/payment_intents/confirm) API may also be provided.
     */
    confirm?: boolean;

    /**
     * One of `automatic` (default) or `manual`.
     *
     * When the confirmation method is `automatic`, a PaymentIntent can be confirmed using a publishable key. After `next_action`s are handled, no additional confirmation is required to complete the payment.
     *
     * When the confirmation method is `manual`, all payment attempts must be made using a secret key. The PaymentIntent returns to the `requires_confirmation` state after handling `next_action`s, and requires your server to initiate each payment attempt with an explicit confirmation.
     */
    confirmation_method?: 'automatic' | 'manual';

    /**
     * Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).
     */
    currency: string;

    /**
     * ID of the Customer this PaymentIntent belongs to, if one exists.
     *
     * If present, payment methods used with this PaymentIntent can only be attached to this Customer, and payment methods attached to other Customers cannot be used with this PaymentIntent.
     */
    customer?: string;

    /**
     * An arbitrary string attached to the object. Often useful for displaying to users.
     */
    description?: string;

    /**
     * Specifies which fields in the response should be expanded.
     */
    expand?: Array<string>;

    /**
     * ID of the mandate to be used for this payment. This parameter can only be used with [`confirm=true`](https://stripe.com/docs/api/payment_intents/create#create_payment_intent-confirm).
     */
    mandate?: string;

    /**
     * This hash contains details about the Mandate to create. This parameter can only be used with [`confirm=true`](https://stripe.com/docs/api/payment_intents/create#create_payment_intent-confirm).
     */
    mandate_data?: {
      /**
       * This hash contains details about the customer acceptance of the Mandate.
       */
      customer_acceptance: {
        /**
         * The time at which the customer accepted the Mandate.
         */
        accepted_at?: number;

        /**
         * If this is a Mandate accepted offline, this hash contains details about the offline acceptance.
         */
        offline?: {};

        /**
         * If this is a Mandate accepted online, this hash contains details about the online acceptance.
         */
        online?: {
          /**
           * The IP address from which the Mandate was accepted by the customer.
           */
          ip_address: string;

          /**
           * The user agent of the browser from which the Mandate was accepted by the customer.
           */
          user_agent: string;
        };

        /**
         * The type of customer acceptance information included with the Mandate. One of `online` or `offline`.
         */
        type: 'offline' | 'online';
      };
    };

    /**
     * Set of key-value pairs that you can attach to an object. This can be useful for storing additional information about the object in a structured format.
     */
    metadata?: {
      [key: string]: string;
    };

    /**
     * Set to `true` to indicate that the customer is not in your checkout flow during this payment attempt, and therefore is unable to authenticate. This parameter is intended for scenarios where you collect card details and [charge them later](https://stripe.com/docs/payments/cards/charging-saved-cards). This parameter can only be used with [`confirm=true`](https://stripe.com/docs/api/payment_intents/create#create_payment_intent-confirm).
     */
    off_session?: boolean | 'one_off' | 'recurring';

    /**
     * The Stripe account ID for which these funds are intended. For details, see the PaymentIntents [use case for connected accounts](https://stripe.com/docs/payments/connected-accounts).
     */
    on_behalf_of?: string;

    /**
     * ID of the payment method (a PaymentMethod, Card, or [compatible Source](https://stripe.com/docs/payments/payment-methods#compatibility) object) to attach to this PaymentIntent.
     */
    payment_method?: string;

    /**
     * Payment-method-specific configuration for this PaymentIntent.
     */
    payment_method_options?: {
      /**
       * Configuration for any card payments attempted on this PaymentIntent.
       */
      card?: {
        /**
         * Installment configuration for payments attempted on this PaymentIntent (Mexico Only).
         *
         * For more information, see the [installments integration guide](https://stripe.com/docs/payments/installments).
         */
        installments?: {
          /**
           * Setting to true enables installments for this PaymentIntent.
           * This will cause the response to contain a list of available installment plans.
           * Setting to false will prevent any selected plan from applying to a charge.
           */
          enabled?: boolean;

          /**
           * The selected installment plan to use for this payment attempt.
           * This parameter can only be provided during confirmation.
           */
          plan?:
            | {
              /**
               * For `fixed_count` installment plans, this is the number of installment payments your customer will make to their credit card.
               */
              count: number;

              /**
               * For `fixed_count` installment plans, this is the interval between installment payments your customer will make to their credit card.
               * One of `month`.
               */
              interval: 'month';

              /**
               * Type of installment plan, one of `fixed_count`.
               */
              type: 'fixed_count';
            }
            | '';
        };

        /**
         * When specified, this parameter indicates that a transaction will be marked
         * as MOTO (Mail Order Telephone Order) and thus out of scope for SCA. This
         * parameter can only be provided during confirmation.
         */
        moto?: boolean;

        /**
         * We strongly recommend that you rely on our SCA Engine to automatically prompt your customers for authentication based on risk level and [other requirements](https://stripe.com/docs/strong-customer-authentication). However, if you wish to request 3D Secure based on logic from your own fraud engine, provide this option. Permitted values include: `automatic` or `any`. If not provided, defaults to `automatic`. Read our guide on [manually requesting 3D Secure](https://stripe.com/docs/payments/3d-secure#manual-three-ds) for more information on how this configuration interacts with Radar and our SCA Engine.
         */
        request_three_d_secure?: 'any' | 'automatic';
      };
    };

    /**
     * The list of payment method types (e.g. card) that this PaymentIntent is allowed to use. If this is not provided, defaults to ["card"].
     */
    payment_method_types?: Array<string>;

    /**
     * Email address that the receipt for the resulting payment will be sent to.
     */
    receipt_email?: string;

    /**
     * The URL to redirect your customer back to after they authenticate or cancel their payment on the payment method's app or site. If you'd prefer to redirect to a mobile application, you can alternatively supply an application URI scheme. This parameter can only be used with [`confirm=true`](https://stripe.com/docs/api/payment_intents/create#create_payment_intent-confirm).
     */
    return_url?: string;

    /**
     * If the PaymentIntent has a `payment_method` and a `customer` or if you're attaching a payment method to the PaymentIntent in this request, you can pass `save_payment_method=true` to save the payment method to the customer. Defaults to `false`.
     *
     * If the payment method is already saved to a customer, this does nothing. If this type of payment method cannot be saved to a customer, the request will error.
     *
     * _Note that saving a payment method using this parameter does not guarantee that the payment method can be charged._ To ensure that only payment methods which can be charged are saved to a customer, you can [manually save](https://stripe.com/docs/api/customers/create#create_customer-source) the payment method in response to the [`payment_intent.succeeded` webhook](https://stripe.com/docs/api/events/types#event_types-payment_intent.succeeded).
     */
    save_payment_method?: boolean;

    /**
     * Indicates that you intend to make future payments with this PaymentIntent's payment method.
     *
     * If present, the payment method used with this PaymentIntent can be [attached](https://stripe.com/docs/api/payment_methods/attach) to a Customer, even after the transaction completes.
     *
     * Use `on_session` if you intend to only reuse the payment method when your customer is present in your checkout flow. Use `off_session` if your customer may or may not be in your checkout flow. For more, learn to [save card details after a payment](https://stripe.com/docs/payments/save-after-payment).
     *
     * Stripe uses `setup_future_usage` to dynamically optimize your payment flow and comply with regional legislation and network rules. For example, if your customer is impacted by [SCA](https://stripe.com/docs/strong-customer-authentication), using `off_session` will ensure that they are authenticated while processing this PaymentIntent. You will then be able to collect [off-session payments](https://stripe.com/docs/payments/cards/charging-saved-cards#off-session-payments-with-saved-cards) for this customer.
     */
    setup_future_usage?: 'off_session' | 'on_session';

    /**
     * Shipping information for this PaymentIntent.
     */
    shipping?: {
      /**
       * Shipping address.
       */
      address: {
        city?: string;

        country?: string;

        line1: string;

        line2?: string;

        postal_code?: string;

        state?: string;
      };

      /**
       * The delivery service that shipped a physical product, such as Fedex, UPS, USPS, etc.
       */
      carrier?: string;

      /**
       * Recipient name.
       */
      name: string;

      /**
       * Recipient phone (including extension).
       */
      phone?: string;

      /**
       * The tracking number for a physical product, obtained from the delivery service. If multiple tracking numbers were generated for this purchase, please separate them with commas.
       */
      tracking_number?: string;
    };

    /**
     * This is a legacy field that will be removed in the future. It is the ID of the Source object to attach to this PaymentIntent. Please use the `payment_method` field instead, which also supports Source, Card, and BankAccount objects.
     */
    source?: string;

    /**
     * For non-card charges, you can use this value as the complete description that appears on your customers' statements. Must contain at least one letter, maximum 22 characters.
     */
    statement_descriptor?: string;

    /**
     * Provides information about a card payment that customers see on their statements. Concatenated with the prefix (shortened descriptor) or statement descriptor that's set on the account to form the complete statement descriptor. Maximum 22 characters for the concatenated descriptor.
     */
    statement_descriptor_suffix?: string;

    /**
     * The parameters used to automatically create a Transfer when the payment succeeds.
     * For more information, see the PaymentIntents [use case for connected accounts](https://stripe.com/docs/payments/connected-accounts).
     */
    transfer_data?: {
      /**
       * The amount that will be transferred automatically when a charge succeeds.
       * The amount is capped at the total transaction amount and if no amount is set,
       * the full amount is transferred.
       *
       * If you intend to collect a fee and you need a more robust reporting experience, using
       * [application_fee_amount](https://stripe.com/docs/api/payment_intents/create#create_payment_intent-application_fee_amount)
       * might be a better fit for your integration.
       */
      amount?: number;

      /**
       * If specified, successful charges will be attributed to the destination
       * account for tax reporting, and the funds from charges will be transferred
       * to the destination account. The ID of the resulting transfer will be
       * returned on the successful charge's `transfer` field.
       */
      destination: string;
    };

    /**
     * A string that identifies the resulting payment as part of a group. See the PaymentIntents [use case for connected accounts](https://stripe.com/docs/payments/connected-accounts) for details.
     */
    transfer_group?: string;

    /**
     * Set to `true` only when using manual confirmation and the iOS or Android SDKs to handle additional authentication steps.
     */
    use_stripe_sdk?: boolean;
  }

  /**
   * Returns a list of PaymentIntents.
   */
  export interface PaymentIntentListParams {
    /**
     * A filter on the list, based on the object `created` field. The value can be a string with an integer Unix timestamp, or it can be a dictionary with a number of different query options.
     */
    created?:
      | {
        /**
         * Minimum value to filter by (exclusive)
         */
        gt?: number;

        /**
         * Minimum value to filter by (inclusive)
         */
        gte?: number;

        /**
         * Maximum value to filter by (exclusive)
         */
        lt?: number;

        /**
         * Maximum value to filter by (inclusive)
         */
        lte?: number;
      }
      | number;

    /**
     * Only return PaymentIntents for the customer specified by this customer ID.
     */
    customer?: string;

    /**
     * A cursor for use in pagination. `ending_before` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, starting with `obj_bar`, your subsequent call can include `ending_before=obj_bar` in order to fetch the previous page of the list.
     */
    ending_before?: string;

    /**
     * Specifies which fields in the response should be expanded.
     */
    expand?: Array<string>;

    /**
     * A limit on the number of objects to be returned. Limit can range between 1 and 100, and the default is 10.
     */
    limit?: number;

    /**
     * A cursor for use in pagination. `starting_after` is an object ID that defines your place in the list. For instance, if you make a list request and receive 100 objects, ending with `obj_foo`, your subsequent call can include `starting_after=obj_foo` in order to fetch the next page of the list.
     */
    starting_after?: string;
  }

  /**
   * Retrieves the details of a PaymentIntent that has previously been created.
   *
   * Client-side retrieval using a publishable key is allowed when the client_secret is provided in the query string.
   *
   * When retrieved with a publishable key, only a subset of properties will be returned. Please refer to the [payment intent](https://stripe.com/docs/api#payment_intent_object) object reference for more details.
   */
  export interface PaymentIntentRetrieveParams {
    /**
     * The client secret of the PaymentIntent. Required if a publishable key is used to retrieve the source.
     */
    client_secret?: string;

    /**
     * Specifies which fields in the response should be expanded.
     */
    expand?: Array<string>;
  }

  /**
   * Updates properties on a PaymentIntent object without confirming.
   *
   * Depending on which properties you update, you may need to confirm the
   * PaymentIntent again. For example, updating the payment_method will
   * always require you to confirm the PaymentIntent again. If you prefer to
   * update and confirm at the same time, we recommend updating properties via
   * the [confirm API](https://stripe.com/docs/api/payment_intents/confirm) instead.
   */
  export interface PaymentIntentUpdateParams {
    /**
     * Amount intended to be collected by this PaymentIntent. A positive integer representing how much to charge in the [smallest currency unit](https://stripe.com/docs/currencies#zero-decimal) (e.g., 100 cents to charge $1.00 or 100 to charge Â¥100, a zero-decimal currency). The minimum amount is $0.50 US or [equivalent in charge currency](https://stripe.com/docs/currencies#minimum-and-maximum-charge-amounts). The amount value supports up to eight digits (e.g., a value of 99999999 for a USD charge of $999,999.99).
     */
    amount?: number;

    /**
     * The amount of the application fee (if any) for the resulting payment. See the PaymentIntents [use case for connected accounts](https://stripe.com/docs/payments/connected-accounts) for details.
     */
    application_fee_amount?: number | '';

    /**
     * Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).
     */
    currency?: string;

    /**
     * ID of the Customer this PaymentIntent belongs to, if one exists.
     *
     * If present, payment methods used with this PaymentIntent can only be attached to this Customer, and payment methods attached to other Customers cannot be used with this PaymentIntent.
     */
    customer?: string;

    /**
     * An arbitrary string attached to the object. Often useful for displaying to users.
     */
    description?: string;

    /**
     * Specifies which fields in the response should be expanded.
     */
    expand?: Array<string>;

    /**
     * Set of key-value pairs that you can attach to an object. This can be useful for storing additional information about the object in a structured format.
     */
    metadata?: {
      [key: string]: string;
    };

    /**
     * ID of the payment method (a PaymentMethod, Card, or [compatible Source](https://stripe.com/docs/payments/payment-methods#compatibility) object) to attach to this PaymentIntent.
     */
    payment_method?: string;

    /**
     * The list of payment method types (e.g. card) that this PaymentIntent is allowed to use.
     */
    payment_method_types?: Array<string>;

    /**
     * Email address that the receipt for the resulting payment will be sent to.
     */
    receipt_email?: string | '';

    /**
     * If the PaymentIntent has a `payment_method` and a `customer` or if you're attaching a payment method to the PaymentIntent in this request, you can pass `save_payment_method=true` to save the payment method to the customer. Defaults to `false`.
     *
     * If the payment method is already saved to a customer, this does nothing. If this type of payment method cannot be saved to a customer, the request will error.
     *
     * _Note that saving a payment method using this parameter does not guarantee that the payment method can be charged._ To ensure that only payment methods which can be charged are saved to a customer, you can [manually save](https://stripe.com/docs/api/customers/create#create_customer-source) the payment method in response to the [`payment_intent.succeeded` webhook](https://stripe.com/docs/api/events/types#event_types-payment_intent.succeeded).
     */
    save_payment_method?: boolean;

    /**
     * Indicates that you intend to make future payments with this PaymentIntent's payment method.
     *
     * If present, the payment method used with this PaymentIntent can be [attached](https://stripe.com/docs/api/payment_methods/attach) to a Customer, even after the transaction completes.
     *
     * Use `on_session` if you intend to only reuse the payment method when your customer is present in your checkout flow. Use `off_session` if your customer may or may not be in your checkout flow.
     *
     * Stripe uses `setup_future_usage` to dynamically optimize your payment flow and comply with regional legislation and network rules. For example, if your customer is impacted by [SCA](https://stripe.com/docs/strong-customer-authentication), using `off_session` will ensure that they are authenticated while processing this PaymentIntent. You will then be able to collect [off-session payments](https://stripe.com/docs/payments/cards/charging-saved-cards#off-session-payments-with-saved-cards) for this customer.
     *
     * If `setup_future_usage` is already set and you are performing a request using a publishable key, you may only update the value from `on_session` to `off_session`.
     */
    setup_future_usage?: '' | 'off_session' | 'on_session';

    /**
     * Shipping information for this PaymentIntent.
     */
    shipping?:
      | {
        /**
         * Shipping address.
         */
        address: {
          city?: string;

          country?: string;

          line1: string;

          line2?: string;

          postal_code?: string;

          state?: string;
        };

        /**
         * The delivery service that shipped a physical product, such as Fedex, UPS, USPS, etc.
         */
        carrier?: string;

        /**
         * Recipient name.
         */
        name: string;

        /**
         * Recipient phone (including extension).
         */
        phone?: string;

        /**
         * The tracking number for a physical product, obtained from the delivery service. If multiple tracking numbers were generated for this purchase, please separate them with commas.
         */
        tracking_number?: string;
      }
      | '';

    /**
     * This is a legacy field that will be removed in the future. It is the ID of the Source object to attach to this PaymentIntent. Please use the `payment_method` field instead, which also supports Source, Card, and BankAccount objects.
     */
    source?: string;

    /**
     * For non-card charges, you can use this value as the complete description that appears on your customers' statements. Must contain at least one letter, maximum 22 characters.
     */
    statement_descriptor?: string;

    /**
     * Provides information about a card payment that customers see on their statements. Concatenated with the prefix (shortened descriptor) or statement descriptor that's set on the account to form the complete statement descriptor. Maximum 22 characters for the concatenated descriptor.
     */
    statement_descriptor_suffix?: string;

    /**
     * The parameters used to automatically create a Transfer when the payment succeeds. For more information, see the PaymentIntents [use case for connected accounts](https://stripe.com/docs/payments/connected-accounts).
     */
    transfer_data?: {
      /**
       * The amount that will be transferred automatically when a charge succeeds.
       */
      amount?: number;
    };

    /**
     * A string that identifies the resulting payment as part of a group. `transfer_group` may only be provided if it has not been set. See the PaymentIntents [use case for connected accounts](https://stripe.com/docs/payments/connected-accounts) for details.
     */
    transfer_group?: string;
  }

  /**
   * A PaymentIntent object can be canceled when it is in one of these statuses: requires_payment_method, requires_capture, requires_confirmation, requires_action.
   *
   * Once canceled, no additional charges will be made by the PaymentIntent and any operations on the PaymentIntent will fail with an error. For PaymentIntents with status='requires_capture', the remaining amount_capturable will automatically be refunded.
   */
  export interface PaymentIntentCancelParams {
    /**
     * Reason for canceling this PaymentIntent. Possible values are `duplicate`, `fraudulent`, `requested_by_customer`, or `abandoned`
     */
    cancellation_reason?:
      | 'abandoned'
      | 'duplicate'
      | 'fraudulent'
      | 'requested_by_customer';

    /**
     * Specifies which fields in the response should be expanded.
     */
    expand?: Array<string>;
  }

  /**
   * Capture the funds of an existing uncaptured PaymentIntent when its status is requires_capture.
   *
   * Uncaptured PaymentIntents will be canceled exactly seven days after they are created.
   *
   * Learn more about [separate authorization and capture](https://stripe.com/docs/payments/capture-later).
   */
  export interface PaymentIntentCaptureParams {
    /**
     * The amount to capture from the PaymentIntent, which must be less than or equal to the original amount. Any additional amount will be automatically refunded. Defaults to the full `amount_capturable` if not provided.
     */
    amount_to_capture?: number;

    /**
     * The amount of the application fee (if any) that will be applied to the
     * payment and transferred to the application owner's Stripe account. For
     * more information, see the PaymentIntents [use case for connected accounts](https://stripe.com/docs/payments/connected-accounts).
     */
    application_fee_amount?: number;

    /**
     * Specifies which fields in the response should be expanded.
     */
    expand?: Array<string>;

    /**
     * For non-card charges, you can use this value as the complete description that appears on your customers' statements. Must contain at least one letter, maximum 22 characters.
     */
    statement_descriptor?: string;

    /**
     * Provides information about a card payment that customers see on their statements. Concatenated with the prefix (shortened descriptor) or statement descriptor that's set on the account to form the complete statement descriptor. Maximum 22 characters for the concatenated descriptor.
     */
    statement_descriptor_suffix?: string;

    /**
     * The parameters used to automatically create a Transfer when the payment
     * is captured. For more information, see the PaymentIntents [use case for connected accounts](https://stripe.com/docs/payments/connected-accounts).
     */
    transfer_data?: {
      /**
       * The amount that will be transferred automatically when a charge succeeds.
       */
      amount?: number;
    };
  }

  /**
   * Confirm that your customer intends to pay with current or provided
   * payment method. Upon confirmation, the PaymentIntent will attempt to initiate
   * a payment.
   *
   * If the selected payment method requires additional authentication steps, the
   * PaymentIntent will transition to the requires_action status and
   * suggest additional actions via next_action. If payment fails,
   * the PaymentIntent will transition to the requires_payment_method status. If
   * payment succeeds, the PaymentIntent will transition to the succeeded
   * status (or requires_capture, if capture_method is set to manual).
   *
   * If the confirmation_method is automatic, payment may be attempted
   * using our [client SDKs](https://stripe.com/docs/stripe-js/reference#stripe-handle-card-payment)
   * and the PaymentIntent's [client_secret](https://stripe.com/docs/api#payment_intent_object-client_secret).
   * After next_actions are handled by the client, no additional
   * confirmation is required to complete the payment.
   *
   * If the confirmation_method is manual, all payment attempts must be
   * initiated using a secret key.
   * If any actions are required for the payment, the PaymentIntent will
   * return to the requires_confirmation state
   * after those actions are completed. Your server needs to then
   * explicitly re-confirm the PaymentIntent to initiate the next payment
   * attempt. Read the [expanded documentation](https://stripe.com/docs/payments/payment-intents/web-manual)
   * to learn more about manual confirmation.
   */
  export interface PaymentIntentConfirmParams {
    /**
     * Specifies which fields in the response should be expanded.
     */
    expand?: Array<string>;

    /**
     * ID of the mandate to be used for this payment.
     */
    mandate?: string;

    /**
     * This hash contains details about the Mandate to create
     */
    mandate_data?:
      | {
        /**
         * This hash contains details about the customer acceptance of the Mandate.
         */
        customer_acceptance: {
          /**
           * The time at which the customer accepted the Mandate.
           */
          accepted_at?: number;

          /**
           * If this is a Mandate accepted offline, this hash contains details about the offline acceptance.
           */
          offline?: {};

          /**
           * If this is a Mandate accepted online, this hash contains details about the online acceptance.
           */
          online?: {
            /**
             * The IP address from which the Mandate was accepted by the customer.
             */
            ip_address: string;

            /**
             * The user agent of the browser from which the Mandate was accepted by the customer.
             */
            user_agent: string;
          };

          /**
           * The type of customer acceptance information included with the Mandate. One of `online` or `offline`.
           */
          type: 'offline' | 'online';
        };
      }
      | {
        /**
         * This hash contains details about the customer acceptance of the Mandate.
         */
        customer_acceptance: {
          /**
           * If this is a Mandate accepted online, this hash contains details about the online acceptance.
           */
          online: {
            /**
             * The IP address from which the Mandate was accepted by the customer.
             */
            ip_address?: string;

            /**
             * The user agent of the browser from which the Mandate was accepted by the customer.
             */
            user_agent?: string;
          };

          /**
           * The type of customer acceptance information included with the Mandate.
           */
          type: 'online';
        };
      };

    /**
     * Set to `true` to indicate that the customer is not in your checkout flow during this payment attempt, and therefore is unable to authenticate. This parameter is intended for scenarios where you collect card details and [charge them later](https://stripe.com/docs/payments/cards/charging-saved-cards).
     */
    off_session?: boolean | 'one_off' | 'recurring';

    /**
     * ID of the payment method (a PaymentMethod, Card, or [compatible Source](https://stripe.com/docs/payments/payment-methods#compatibility) object) to attach to this PaymentIntent.
     */
    payment_method?: string;

    /**
     * Payment-method-specific configuration for this PaymentIntent.
     */
    payment_method_options?: {
      /**
       * Configuration for any card payments attempted on this PaymentIntent.
       */
      card?: {
        /**
         * Installment configuration for payments attempted on this PaymentIntent (Mexico Only).
         *
         * For more information, see the [installments integration guide](https://stripe.com/docs/payments/installments).
         */
        installments?: {
          /**
           * Setting to true enables installments for this PaymentIntent.
           * This will cause the response to contain a list of available installment plans.
           * Setting to false will prevent any selected plan from applying to a charge.
           */
          enabled?: boolean;

          /**
           * The selected installment plan to use for this payment attempt.
           * This parameter can only be provided during confirmation.
           */
          plan?:
            | {
              /**
               * For `fixed_count` installment plans, this is the number of installment payments your customer will make to their credit card.
               */
              count: number;

              /**
               * For `fixed_count` installment plans, this is the interval between installment payments your customer will make to their credit card.
               * One of `month`.
               */
              interval: 'month';

              /**
               * Type of installment plan, one of `fixed_count`.
               */
              type: 'fixed_count';
            }
            | '';
        };

        /**
         * When specified, this parameter indicates that a transaction will be marked
         * as MOTO (Mail Order Telephone Order) and thus out of scope for SCA. This
         * parameter can only be provided during confirmation.
         */
        moto?: boolean;

        /**
         * We strongly recommend that you rely on our SCA Engine to automatically prompt your customers for authentication based on risk level and [other requirements](https://stripe.com/docs/strong-customer-authentication). However, if you wish to request 3D Secure based on logic from your own fraud engine, provide this option. Permitted values include: `automatic` or `any`. If not provided, defaults to `automatic`. Read our guide on [manually requesting 3D Secure](https://stripe.com/docs/payments/3d-secure#manual-three-ds) for more information on how this configuration interacts with Radar and our SCA Engine.
         */
        request_three_d_secure?: 'any' | 'automatic';
      };
    };

    /**
     * Email address that the receipt for the resulting payment will be sent to.
     */
    receipt_email?: string | '';

    /**
     * The URL to redirect your customer back to after they authenticate or cancel their payment on the payment method's app or site.
     * If you'd prefer to redirect to a mobile application, you can alternatively supply an application URI scheme.
     * This parameter is only used for cards and other redirect-based payment methods.
     */
    return_url?: string;

    /**
     * If the PaymentIntent has a `payment_method` and a `customer` or if you're attaching a payment method to the PaymentIntent in this request, you can pass `save_payment_method=true` to save the payment method to the customer. Defaults to `false`.
     *
     * If the payment method is already saved to a customer, this does nothing. If this type of payment method cannot be saved to a customer, the request will error.
     *
     * _Note that saving a payment method using this parameter does not guarantee that the payment method can be charged._ To ensure that only payment methods which can be charged are saved to a customer, you can [manually save](https://stripe.com/docs/api/customers/create#create_customer-source) the payment method in response to the [`payment_intent.succeeded` webhook](https://stripe.com/docs/api/events/types#event_types-payment_intent.succeeded).
     */
    save_payment_method?: boolean;

    /**
     * Indicates that you intend to make future payments with this PaymentIntent's payment method.
     *
     * If present, the payment method used with this PaymentIntent can be [attached](https://stripe.com/docs/api/payment_methods/attach) to a Customer, even after the transaction completes.
     *
     * Use `on_session` if you intend to only reuse the payment method when your customer is present in your checkout flow. Use `off_session` if your customer may or may not be in your checkout flow.
     *
     * Stripe uses `setup_future_usage` to dynamically optimize your payment flow and comply with regional legislation and network rules. For example, if your customer is impacted by [SCA](https://stripe.com/docs/strong-customer-authentication), using `off_session` will ensure that they are authenticated while processing this PaymentIntent. You will then be able to collect [off-session payments](https://stripe.com/docs/payments/cards/charging-saved-cards#off-session-payments-with-saved-cards) for this customer.
     *
     * If `setup_future_usage` is already set and you are performing a request using a publishable key, you may only update the value from `on_session` to `off_session`.
     */
    setup_future_usage?: '' | 'off_session' | 'on_session';

    /**
     * Shipping information for this PaymentIntent.
     */
    shipping?:
      | {
        /**
         * Shipping address.
         */
        address: {
          city?: string;

          country?: string;

          line1: string;

          line2?: string;

          postal_code?: string;

          state?: string;
        };

        /**
         * The delivery service that shipped a physical product, such as Fedex, UPS, USPS, etc.
         */
        carrier?: string;

        /**
         * Recipient name.
         */
        name: string;

        /**
         * Recipient phone (including extension).
         */
        phone?: string;

        /**
         * The tracking number for a physical product, obtained from the delivery service. If multiple tracking numbers were generated for this purchase, please separate them with commas.
         */
        tracking_number?: string;
      }
      | '';

    /**
     * This is a legacy field that will be removed in the future. It is the ID of the Source object to attach to this PaymentIntent. Please use the `payment_method` field instead, which also supports Source, Card, and BankAccount objects.
     */
    source?: string;

    /**
     * Set to `true` only when using manual confirmation and the iOS or Android SDKs to handle additional authentication steps.
     */
    use_stripe_sdk?: boolean;
  }

  class PaymentIntentResource {
    /**
     * Creates a PaymentIntent object.
     *
     * After the PaymentIntent is created, attach a payment method and [confirm](https://stripe.com/docs/api/payment_intents/confirm)
     * to continue the payment. You can read more about the different payment flows
     * available via the Payment Intents API [here](https://stripe.com/docs/payments/payment-intents).
     *
     * When confirm=true is used during creation, it is equivalent to creating
     * and confirming the PaymentIntent in the same call. You may use any parameters
     * available in the [confirm API](https://stripe.com/docs/api/payment_intents/confirm) when confirm=true
     * is supplied.
     */
    create(
      params: PaymentIntentCreateParams,
      options?: HeaderOptions
    ): Promise<PaymentIntent>;

    /**
     * Returns a list of PaymentIntents.
     */
    list(
      params?: PaymentIntentListParams,
      options?: HeaderOptions
    ): Promise<ApiList<PaymentIntent>>;

    /**
     * Retrieves the details of a PaymentIntent that has previously been created.
     *
     * Client-side retrieval using a publishable key is allowed when the client_secret is provided in the query string.
     *
     * When retrieved with a publishable key, only a subset of properties will be returned. Please refer to the [payment intent](https://stripe.com/docs/api#payment_intent_object) object reference for more details.
     */
    retrieve(
      id: string,
      params?: PaymentIntentRetrieveParams,
      options?: HeaderOptions
    ): Promise<PaymentIntent>;

    /**
     * Updates properties on a PaymentIntent object without confirming.
     *
     * Depending on which properties you update, you may need to confirm the
     * PaymentIntent again. For example, updating the payment_method will
     * always require you to confirm the PaymentIntent again. If you prefer to
     * update and confirm at the same time, we recommend updating properties via
     * the [confirm API](https://stripe.com/docs/api/payment_intents/confirm) instead.
     */
    update(
      id: string,
      params?: PaymentIntentUpdateParams,
      options?: HeaderOptions
    ): Promise<PaymentIntent>;

    /**
     * A PaymentIntent object can be canceled when it is in one of these statuses: requires_payment_method, requires_capture, requires_confirmation, requires_action.
     *
     * Once canceled, no additional charges will be made by the PaymentIntent and any operations on the PaymentIntent will fail with an error. For PaymentIntents with status='requires_capture', the remaining amount_capturable will automatically be refunded.
     */
    cancel(
      id: string,
      params?: PaymentIntentCancelParams,
      options?: HeaderOptions
    ): Promise<PaymentIntent>;

    /**
     * Capture the funds of an existing uncaptured PaymentIntent when its status is requires_capture.
     *
     * Uncaptured PaymentIntents will be canceled exactly seven days after they are created.
     *
     * Learn more about [separate authorization and capture](https://stripe.com/docs/payments/capture-later).
     */
    capture(
      id: string,
      params?: PaymentIntentCaptureParams,
      options?: HeaderOptions
    ): Promise<PaymentIntent>;

    /**
     * Confirm that your customer intends to pay with current or provided
     * payment method. Upon confirmation, the PaymentIntent will attempt to initiate
     * a payment.
     *
     * If the selected payment method requires additional authentication steps, the
     * PaymentIntent will transition to the requires_action status and
     * suggest additional actions via next_action. If payment fails,
     * the PaymentIntent will transition to the requires_payment_method status. If
     * payment succeeds, the PaymentIntent will transition to the succeeded
     * status (or requires_capture, if capture_method is set to manual).
     *
     * If the confirmation_method is automatic, payment may be attempted
     * using our [client SDKs](https://stripe.com/docs/stripe-js/reference#stripe-handle-card-payment)
     * and the PaymentIntent's [client_secret](https://stripe.com/docs/api#payment_intent_object-client_secret).
     * After next_actions are handled by the client, no additional
     * confirmation is required to complete the payment.
     *
     * If the confirmation_method is manual, all payment attempts must be
     * initiated using a secret key.
     * If any actions are required for the payment, the PaymentIntent will
     * return to the requires_confirmation state
     * after those actions are completed. Your server needs to then
     * explicitly re-confirm the PaymentIntent to initiate the next payment
     * attempt. Read the [expanded documentation](https://stripe.com/docs/payments/payment-intents/web-manual)
     * to learn more about manual confirmation.
     */
    confirm(
      id: string,
      params?: PaymentIntentConfirmParams,
      options?: HeaderOptions
    ): Promise<PaymentIntent>;
  }
}